name: Test and CD to AWS

env:
  NODE: 18.16.0

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.6
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE }}"
          
      - name: Run npm test and terraform validate
        run: make test
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: live
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.6
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE }}"
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          
      - name: Deploy to AWS
        # there's almost definitely a better way to do this, but it works
        # the variables can be found in the AWS console but aren't for public display in this repo
        run: |
          rm -f terraform/production.tfvars || echo "No production.tfvars"
          
          echo "staging_authorization = \"${{ secrets.STAGING_AUTHORIZATION }}\"" >> terraform/production.tfvars
          echo "acm_certificate_arn = \"${{ secrets.ACM_CERTIFICATE_ARN }}\"" >> terraform/production.tfvars
          echo "cf_id_value = \"${{ secrets.CF_ID_VALUE }}\"" >> terraform/production.tfvars
          echo "origin_domain = \"${{ secrets.ORIGIN_DOMAIN }}\"" >> terraform/production.tfvars
          echo "web_acl_id = \"${{ secrets.WEB_ACL_ID }}\"" >> terraform/production.tfvars
          echo "environment = \"production\"" >> terraform/production.tfvars
          
          echo "Adding environment variables"
          (
            echo "redact () {
              if (( \$# > 0)); then
                MATCH=\$(echo \"\$@\" | sed 's/ /\|/') && \
                  sed -E \"s/\$MATCH/REDACTED/g\";
              else read tmpRdt && echo \$tmpRdt;
              fi
            }"
            echo "awsredact () { redact '[[:xdigit:]]{9,999}'; }"
            echo "hexredact () { redact '[[:xdigit:]]{4,999}'; }"
          ) | tee -a ~/.bash_profile >> ~/.bashrc
          source ~/.bash_profile
          
          make ghapply
          # -- Test plan --
          # cd terraform
          # terraform init | awsredact
          # terraform plan -var-file="production.tfvars" | awsredact
                    
